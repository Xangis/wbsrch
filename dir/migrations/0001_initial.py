# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-01-16 07:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='APISubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_calls', models.IntegerField(default=5000)),
                ('expires', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='APIToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='APIUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('calls_used', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='APIUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('userid', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AutoComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AutoComplete_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'ordering': ['-score'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BadQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=260, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['keywords'],
            },
        ),
        migrations.CreateModel(
            name='BlockedSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(db_index=True, unique=True)),
                ('reason', models.IntegerField(blank=True, choices=[(0, 'Content Farm'), (1, 'Aggregator or Meta Site'), (2, 'Social'), (3, 'Bait and Switch'), (4, 'Porn or Adult Content'), (5, 'Pills'), (6, 'Online Gambling'), (7, 'Spam or Computer Generated Content'), (8, 'Unindexed Language - Unspecified'), (37, 'Unindexed Language - Albanian'), (45, 'Unindexed Language - Amharic'), (20, 'Unindexed Language - Arabic or Farsi'), (32, 'Unindexed Language - Armenian'), (50, 'Unindexed Language - Assamese'), (34, 'Unindexed Language - Azerbaijani'), (59, 'Unindexed Language - Belarusian'), (60, 'Unindexed Language - Bangladeshi'), (21, 'Unindexed Language - Chinese'), (56, 'Unindexed Language - Dzongkha'), (31, 'Unindexed Language - Georgian'), (46, 'Unindexed Language - Gujarati'), (22, 'Unindexed Language - Hebrew'), (23, 'Unindexed Language - Hindi'), (24, 'Unindexed Language - Indonesian or Similar'), (25, 'Unindexed Language - Japanese'), (49, 'Unindexed Language - Javanese'), (58, 'Unindexed Language - Kannada'), (43, 'Unindexed Language - Kazakh'), (26, 'Unindexed Language - Khmer'), (27, 'Unindexed Language - Korean'), (44, 'Unindexed Language - Kyrgyz'), (47, 'Unindexed Language - Kurdish'), (54, 'Unindexed Language - Lao'), (41, 'Unindexed Language - Macedonian'), (55, 'Unindexed Language - Marathi'), (61, 'Unindexed Language - Malayalam'), (48, 'Unindexed Language - Mongolian'), (52, 'Unindexed Language - Nepali'), (57, 'Unindexed Language - Oriya'), (39, 'Unindexed Language - Punjabi'), (40, 'Unindexed Language - Pashto'), (28, 'Unindexed Language - Russian or Other Cyrillic'), (33, 'Unindexed Language - Serbian'), (36, 'Unindexed Language - Sinhala'), (38, 'Unindexed Language - Tagalog'), (51, 'Unindexed Language - Tamil'), (42, 'Unindexed Language - Telugu'), (30, 'Unindexed Language - Thai'), (53, 'Unindexed Language - Uighur'), (35, 'Unindexed Language - Urdu'), (29, 'Unindexed Language - Vietnamese'), (9, 'Piracy'), (10, 'Human Rights Abuses'), (11, 'Ad Server'), (12, 'URL Shortener'), (13, 'No Content'), (14, 'Malware'), (200, 'Quality Content'), (201, 'Partner Site')], null=True)),
                ('detailedreason', models.TextField(blank=True)),
                ('exclude_subdomains', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChangelogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=240, null=True)),
                ('num_urls_crawled', models.IntegerField(blank=True, null=True)),
                ('num_terms_indexed', models.IntegerField(blank=True, null=True)),
                ('num_domains_blocked', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('date_added', models.DateField()),
                ('version', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrawlableUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(db_index=True, max_length=260)),
                ('url', models.TextField(unique=True)),
                ('randval', models.IntegerField(blank=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='DMCANotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sender', models.CharField(max_length=240)),
                ('url', models.CharField(max_length=240)),
                ('contents', models.TextField()),
                ('validity', models.TextField()),
                ('action_taken', models.TextField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DomainInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(db_index=True, max_length=255, unique=True)),
                ('language_association', models.CharField(blank=True, max_length=8, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('rank_adjustment', models.IntegerField(blank=True, choices=[(-3, 'Bottom'), (-2, 'Much Lower'), (-1, 'Slightly Lower'), (-4, 'Marginally Lower'), (0, 'Normal'), (1, 'Slightly Higher'), (2, 'Much Higher')], default=0)),
                ('rank_reason', models.IntegerField(blank=True, choices=[(0, 'Content Farm'), (1, 'Aggregator or Meta Site'), (2, 'Social'), (3, 'Bait and Switch'), (4, 'Porn or Adult Content'), (5, 'Pills'), (6, 'Online Gambling'), (7, 'Spam or Computer Generated Content'), (8, 'Unindexed Language - Unspecified'), (37, 'Unindexed Language - Albanian'), (45, 'Unindexed Language - Amharic'), (20, 'Unindexed Language - Arabic or Farsi'), (32, 'Unindexed Language - Armenian'), (50, 'Unindexed Language - Assamese'), (34, 'Unindexed Language - Azerbaijani'), (59, 'Unindexed Language - Belarusian'), (60, 'Unindexed Language - Bangladeshi'), (21, 'Unindexed Language - Chinese'), (56, 'Unindexed Language - Dzongkha'), (31, 'Unindexed Language - Georgian'), (46, 'Unindexed Language - Gujarati'), (22, 'Unindexed Language - Hebrew'), (23, 'Unindexed Language - Hindi'), (24, 'Unindexed Language - Indonesian or Similar'), (25, 'Unindexed Language - Japanese'), (49, 'Unindexed Language - Javanese'), (58, 'Unindexed Language - Kannada'), (43, 'Unindexed Language - Kazakh'), (26, 'Unindexed Language - Khmer'), (27, 'Unindexed Language - Korean'), (44, 'Unindexed Language - Kyrgyz'), (47, 'Unindexed Language - Kurdish'), (54, 'Unindexed Language - Lao'), (41, 'Unindexed Language - Macedonian'), (55, 'Unindexed Language - Marathi'), (61, 'Unindexed Language - Malayalam'), (48, 'Unindexed Language - Mongolian'), (52, 'Unindexed Language - Nepali'), (57, 'Unindexed Language - Oriya'), (39, 'Unindexed Language - Punjabi'), (40, 'Unindexed Language - Pashto'), (28, 'Unindexed Language - Russian or Other Cyrillic'), (33, 'Unindexed Language - Serbian'), (36, 'Unindexed Language - Sinhala'), (38, 'Unindexed Language - Tagalog'), (51, 'Unindexed Language - Tamil'), (42, 'Unindexed Language - Telugu'), (30, 'Unindexed Language - Thai'), (53, 'Unindexed Language - Uighur'), (35, 'Unindexed Language - Urdu'), (29, 'Unindexed Language - Vietnamese'), (9, 'Piracy'), (10, 'Human Rights Abuses'), (11, 'Ad Server'), (12, 'URL Shortener'), (13, 'No Content'), (14, 'Malware'), (200, 'Quality Content'), (201, 'Partner Site')], null=True)),
                ('alexa_rank', models.IntegerField(blank=True, null=True)),
                ('alexa_rank_date', models.DateField(blank=True, null=True)),
                ('alexa_outdated', models.BooleanField(db_index=True, default=False)),
                ('majestic_rank', models.IntegerField(blank=True, null=True)),
                ('majestic_refsubnets', models.IntegerField(blank=True, null=True)),
                ('majestic_rank_date', models.DateField(blank=True, null=True)),
                ('majestic_outdated', models.BooleanField(db_index=True, default=False)),
                ('quantcast_rank', models.IntegerField(blank=True, null=True)),
                ('quantcast_rank_date', models.DateField(blank=True, null=True)),
                ('quantcast_outdated', models.BooleanField(db_index=True, default=False)),
                ('blocked_to_crawled_ratio', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('domcop_rank', models.IntegerField(blank=True, null=True)),
                ('domcop_pagerank', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('domcop_pagerank_date', models.DateField(blank=True, null=True)),
                ('domcop_pagerank_outdated', models.BooleanField(db_index=True, default=False)),
                ('uses_language_subdirs', models.BooleanField(default=False)),
                ('uses_language_query_parameter', models.BooleanField(default=False, help_text='Does this domain use query parameters like "hl=en" to determine the language?')),
                ('uses_langid', models.BooleanField(default=False, help_text='Does this domain use langid to categorize individual pages?')),
                ('max_urls', models.IntegerField(blank=True, default=None, null=True)),
                ('is_unblockable', models.BooleanField(default=False, help_text='Is this domain unblockable, even by an idiot?')),
                ('domain_created', models.DateTimeField(blank=True, null=True)),
                ('domain_expires', models.DateTimeField(blank=True, null=True)),
                ('domain_updated', models.DateTimeField(blank=True, null=True)),
                ('whois_last_updated', models.DateTimeField(blank=True, null=True)),
                ('robots_ip', models.CharField(blank=True, db_index=True, help_text='The IP address of the server we retrieved (or tried to retrieve) the robots.txt from.', max_length=16, null=True)),
                ('robots_txt', models.TextField(blank=True, null=True)),
                ('robots_last_updated', models.DateTimeField(blank=True, null=True)),
                ('domains_linking_in', models.IntegerField(blank=True, null=True)),
                ('domains_linking_in_last_updated', models.DateTimeField(blank=True, null=True)),
                ('verified_notporn', models.BooleanField(default=False)),
                ('only_crawl_rooturl', models.BooleanField(default=False)),
                ('num_urls', models.IntegerField(blank=True, null=True)),
                ('num_urls_last_updated', models.DateField(blank=True, null=True)),
                ('num_keywords_ranked', models.IntegerField(blank=True, null=True)),
                ('num_keywords_last_updated', models.DateField(blank=True, null=True)),
                ('favicons_last_updated', models.DateField(blank=True, null=True)),
                ('whois_name', models.CharField(blank=True, max_length=90, null=True)),
                ('whois_city', models.CharField(blank=True, max_length=40, null=True)),
                ('whois_country', models.CharField(blank=True, max_length=40, null=True)),
                ('whois_state', models.CharField(blank=True, max_length=40, null=True)),
                ('whois_address', models.CharField(blank=True, max_length=120, null=True)),
                ('whois_org', models.CharField(blank=True, max_length=100, null=True)),
                ('whois_registrar', models.CharField(blank=True, max_length=60, null=True)),
                ('whois_zipcode', models.CharField(blank=True, max_length=40, null=True)),
                ('whois_nameservers', models.TextField(blank=True, null=True)),
                ('whois_emails', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DomainSearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('language', models.CharField(max_length=6)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DomainSuffix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(db_index=True, max_length=30)),
                ('num_known', models.IntegerField(blank=True, null=True)),
                ('num_crawled', models.IntegerField(blank=True, null=True)),
                ('num_blocked', models.IntegerField(blank=True, null=True)),
                ('blocked_to_crawled_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('default_language', models.CharField(blank=True, max_length=8, null=True)),
                ('score_adjustment', models.IntegerField(default=0)),
                ('last_updated', models.DateField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['extension'],
            },
        ),
        migrations.CreateModel(
            name='Favicon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateField(auto_now_add=True)),
                ('icon', models.TextField()),
                ('format', models.CharField(max_length=6)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dir.DomainInfo')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(blank=True, max_length=240, null=True)),
                ('num_search_results', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('language', models.CharField(blank=True, max_length=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=80)),
                ('count', models.IntegerField()),
                ('version', models.DecimalField(decimal_places=4, max_digits=8)),
                ('enabled', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndexStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_excluded', models.IntegerField()),
                ('langs', models.TextField()),
                ('total_urls', models.IntegerField()),
                ('total_indexes', models.IntegerField()),
                ('total_pendingindexes', models.IntegerField()),
                ('create_date', models.DateField(auto_now_add=True)),
                ('most_linked_to_domains', models.TextField()),
                ('last_most_linked_to', models.DateField(blank=True, null=True)),
                ('generation_time', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'verbose_name_plural': 'Index Stats',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='IndexTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
                ('show_ad', models.BooleanField(default=False)),
                ('verified_english', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexTerm_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_indexed', models.DateTimeField(default=django.utils.timezone.now)),
                ('page_rankings', models.TextField()),
                ('num_results', models.IntegerField(blank=True, help_text='Number of results shown in search (max 200), or for multi-word, number of exact matches found in the db.', null=True)),
                ('num_pages', models.IntegerField(blank=True, help_text='Number of pages found in the database (max 1000000).', null=True)),
                ('index_time', models.DecimalField(blank=True, decimal_places=2, help_text='in seconds', max_digits=8, null=True)),
                ('search_results', models.TextField(blank=True, null=True)),
                ('actively_blocked', models.BooleanField(default=False)),
                ('refused', models.BooleanField(default=False)),
                ('typo_for', models.CharField(blank=True, help_text='A phrase that this search term is a possible typo for.', max_length=240, null=True)),
                ('is_language', models.CharField(blank=True, help_text='This is a word in language X, and will show a link to that index in search results.', max_length=4, null=True)),
                ('term_weight', models.IntegerField(blank=True, help_text='Term weight in percent (for multi-word terms). If set below 100, this term will count less than other words.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=16, unique=True)),
                ('spam_commenter', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IPSearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('language', models.CharField(max_length=6)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRanking_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(db_index=True, max_length=240)),
                ('rank', models.IntegerField()),
                ('rooturl', models.CharField(blank=True, db_index=True, max_length=260)),
                ('show', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlySearchReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=3)),
                ('total_searches', models.IntegerField()),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('top_searches', models.TextField()),
                ('create_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-year', '-month', 'language'],
            },
        ),
        migrations.CreateModel(
            name='NewsSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, db_index=True, max_length=260)),
            ],
        ),
        migrations.CreateModel(
            name='PageIFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl_source', models.CharField(blank=True, db_index=True, max_length=260)),
                ('url_source', models.CharField(blank=True, db_index=True, max_length=2048)),
                ('url_destination', models.CharField(blank=True, max_length=2048)),
                ('rooturl_destination', models.CharField(blank=True, max_length=260)),
            ],
        ),
        migrations.CreateModel(
            name='PageJavaScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl_source', models.CharField(blank=True, db_index=True, max_length=260)),
                ('url_source', models.CharField(blank=True, db_index=True, max_length=2048)),
                ('url_destination', models.CharField(blank=True, max_length=2048)),
                ('rooturl_destination', models.CharField(blank=True, max_length=260)),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl_source', models.CharField(blank=True, db_index=True, max_length=260)),
                ('url_source', models.CharField(blank=True, db_index=True, max_length=2048)),
                ('url_destination', models.CharField(blank=True, max_length=2048)),
                ('rooturl_destination', models.CharField(blank=True, db_index=True, max_length=260)),
                ('anchor_text', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PendingIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'verbose_name_plural': 'pending indexes',
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingIndex_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=240, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=240, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QueryParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=60)),
                ('domain', models.CharField(blank=True, db_index=True, max_length=260)),
                ('replace_with', models.CharField(blank=True, help_text='What should the parameter contents be replaced with? If blank, the tag will be removed.', max_length=100, null=True)),
                ('remove_before_crawl', models.BooleanField(default=False, help_text='Should this parameter be removed before crawling?')),
                ('replace_before_crawl', models.BooleanField(default=False, help_text='Should this parameter be replaced before crawling?')),
                ('remove_or_replace_after_crawl', models.BooleanField(default=True, help_text='Should this parameter be removed or replaced after crawling?')),
                ('only_replace_if_present', models.BooleanField(default=False, help_text='Only replace the URL parameter if it is already present.')),
            ],
        ),
        migrations.CreateModel(
            name='ResultClick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_sk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultClick_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField()),
                ('search_id', models.UUIDField(db_index=True, editable=False, null=True)),
                ('position', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('url', models.TextField(db_index=True)),
                ('click_time', models.DateTimeField(auto_now_add=True)),
                ('xpos', models.IntegerField(blank=True, null=True)),
                ('ypos', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_large', models.TextField(blank=True, help_text='1280x800px image file location.', null=True)),
                ('file_small', models.TextField(blank=True, help_text='320x200px image file location.', null=True)),
                ('date_taken', models.DateField(auto_now_add=True)),
                ('domain', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dir.DomainInfo')),
            ],
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_sk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchLog_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(db_index=True)),
                ('result_count', models.IntegerField()),
                ('last_search', models.DateTimeField(auto_now_add=True)),
                ('search_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('ip_country', models.CharField(blank=True, max_length=3, null=True)),
                ('browserstring', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField(default=False)),
                ('search_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('value', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='SiteInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'site_info',
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_an',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_cs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_cy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_de',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_el',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_es',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_et',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_eu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_fi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_fr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_gl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_ha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_hu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_is',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_it',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_lt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_lv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_nl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_no',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_pl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_pt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_ro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_rw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_sl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_sn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_sv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_sw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_tr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_wo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_xh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_yo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInfo_zu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooturl', models.CharField(blank=True, max_length=260)),
                ('url', models.CharField(blank=True, max_length=2048, unique=True)),
                ('pagetitle', models.CharField(blank=True, max_length=260, null=True)),
                ('pagedescription', models.CharField(blank=True, max_length=320, null=True)),
                ('pagefirstheadtag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth2tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagefirsth3tag', models.CharField(blank=True, max_length=260, null=True)),
                ('pagekeywords', models.CharField(blank=True, max_length=260, null=True)),
                ('pagecontents', models.TextField(blank=True, null=True)),
                ('pagetext', models.TextField(blank=True, null=True)),
                ('pagesize', models.IntegerField(blank=True, null=True)),
                ('lastcrawled', models.DateTimeField(blank=True, null=True)),
                ('firstcrawled', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('num_errors', models.IntegerField(blank=True, default=0)),
                ('error_info', models.TextField(blank=True, default='')),
                ('server_header', models.CharField(blank=True, max_length=128, null=True)),
                ('content_type_header', models.CharField(blank=True, max_length=100, null=True)),
                ('num_css_files', models.IntegerField(blank=True, help_text='Number of external CSS files.', null=True)),
                ('num_images', models.IntegerField(blank=True, null=True)),
                ('num_javascripts', models.IntegerField(blank=True, help_text='Number of external JavaScript files.', null=True)),
                ('num_iframes', models.IntegerField(blank=True, null=True)),
                ('num_audio_tags', models.IntegerField(blank=True, null=True)),
                ('num_video_tags', models.IntegerField(blank=True, null=True)),
                ('num_svg_tags', models.IntegerField(blank=True, null=True)),
                ('num_canvas_tags', models.IntegerField(blank=True, null=True)),
                ('image_alt_tags', models.TextField(blank=True, null=True)),
                ('image_title_tags', models.TextField(blank=True, null=True)),
                ('image_filenames', models.TextField(blank=True, null=True)),
                ('simhash_value', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='apiusage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dir.APIUser'),
        ),
        migrations.AddField(
            model_name='apitoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dir.APIUser'),
        ),
        migrations.AddField(
            model_name='apisubscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dir.APIUser'),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Title After Z',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInAE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in AE',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInAM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in AM',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInASIA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in ASIA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInAZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in AZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInBG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in BG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInBH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in BH',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInBIZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in BIZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInBY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in BY',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInBZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in BZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInCN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in CN',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInCOM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in COM',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInDZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in DZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInEE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in EE',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInEG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in EG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInFM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in FM',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInGE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in GE',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInHK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in HK',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInIL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in IL',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInIN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in IN',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInINFO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in INFO',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInIQ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in IQ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInIR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in IR',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInJO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in JO',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInJP',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in JP',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInKG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in KG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInKR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in KR',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInKW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in KW',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInKZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in KZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInLA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in LA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInLB',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in LB',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInLI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in LI',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInLY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in LY',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInMA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in MA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInMD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in MD',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInME',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in ME',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInMK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in MK',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInMOBI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in MOBI',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInMY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in MY',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInNET',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in NET',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInOM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in OM',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInORG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in ORG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInP1AI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in --P1AI',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInPRO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in PRO',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInPS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in PS',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInQA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in QA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInRS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in RS',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInRU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in RU',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInSA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in SA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInSD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in SD',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInSG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in SG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInST',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in ST',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInSU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in SU',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInSY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in SY',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTJ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TJ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TK',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TM',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TN',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TO',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TV',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInTW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in TW',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInUA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in UA',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInUS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in US',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInUZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in UZ',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInVG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in VG',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInWS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in WS',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoAfterZEndingInYE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos After Z ending in YE',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoBeforeZero',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Before 0',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ad',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInADULT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .adult',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ae',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAERO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .aero',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .af',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ai',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .al',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .am',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .an',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ao',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAQ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .aq',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ar',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInASIA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .asia',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .at',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .au',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .aw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInAZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .az',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ba',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBB',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bb',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bd',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .be',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBERLIN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .berlin',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bf',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bh',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bi',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBIZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .biz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBJ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bj',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bo',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .br',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bs',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .by',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInBZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .bz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ca',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCAT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cat',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCC',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cc',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cd',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cf',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ch',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ci',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ck',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .co',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCOM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .com',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cv',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCX',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cx',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cy',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInCZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .cz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .de',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDJ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .dj',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .dk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .dm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .do',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInDZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .dz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEC',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ec',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEDU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .edu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ee',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .eg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInER',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .er',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInES',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .es',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInET',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .et',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .eu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInEUS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .eus',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .fi',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFJ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .fj',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .fk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .fo',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .fr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInFRL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .frl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ga',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGAL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gal',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gd',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ge',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gf',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gh',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gi',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGQ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gq',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGURU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .guru',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInGY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .gy',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .hk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .hm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .hn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .hr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ht',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInHU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .hu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInID',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .id',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .il',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .in',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInINFO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .info',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIQ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .iq',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ir',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .is',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInIT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .it',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInJO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .jo',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInJP',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .jp',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ke',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kh',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ki',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .km',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ko',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKP',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kp',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInKZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .kz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .la',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLB',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lb',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLC',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lc',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .li',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ls',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInLV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .lv',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ma',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMC',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mc',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .md',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInME',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .me',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInML',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ml',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mo',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMOBI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mobi',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMQ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mq',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mv',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMX',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mx',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .my',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInMZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .mz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .na',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ne',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNET',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .net',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ng',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ni',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNINJA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ninja',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .nl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .no',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNP',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .np',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .nu',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInNZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .nz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInOM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .om',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInORG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .org',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pa',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPARIS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .paris',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pe',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pf',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ph',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPICS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pics',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPORN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .porn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .pt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInPY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .py',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInQA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .qa',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInRO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ro',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInRS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .rs',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInRU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ru',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInRW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .rw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sa',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSB',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sb',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSC',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sc',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sd',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .se',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSEXY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sexy',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSI',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .si',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .so',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInST',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .st',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSU',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .su',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sv',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSX',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sx',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sy',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInSZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .sz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTD',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .td',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tg',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTH',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .th',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTJ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tj',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tl',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTO',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .to',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTP',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tp',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTR',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tr',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTRAVEL',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .travel',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTV',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tv',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInTZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .tz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ua',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUG',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ug',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUK',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .uk',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .us',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUY',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .uy',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInUZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .uz',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInVA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .va',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInVE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ve',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInVN',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .vn',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInWF',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .wf',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInWS',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ws',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInXML',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .xml',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInXXX',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .xxx',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInYE',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .ye',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInYT',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .yt',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInZA',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .za',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInZM',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .zm',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoEndingInZW',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Ending With .zw',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoFull',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos - Full View',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoGreekAlphabet',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos Greek Alphabet',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH1AfterZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H1 After Z',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH1BeforeZero',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H1 Before 0',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH1GreekAlphabet',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H1 Greek Alphabet',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH2AfterZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H2 After Z',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH2BeforeZero',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H2 Before 0',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH3AfterZ',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H3 After Z',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
        migrations.CreateModel(
            name='SiteInfoH3BeforeZero',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Site Infos H3 Before 0',
                'proxy': True,
                'indexes': [],
            },
            bases=('dir.siteinfo',),
        ),
    ]
